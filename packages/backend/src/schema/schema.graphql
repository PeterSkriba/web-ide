type Exercise {
  id: ID!
  title: String!
  description: String!
  stdin: [String]!
  stdout: [String]!
}

type Code {
  id: ID!
  user_id: ID!
  exercise_id: ID!
  body: String!
  tests: [Boolean]!
}

type User {
  id: ID!
  username: String!
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  codes: [Code]
}

type Query {
  code(user_id: ID!, exercise_id: ID!): Code
  user(id: ID!): User
  exercise(id: ID!): Exercise
}

type Mutation {
  updateCode(data: updateCodeInput): Code
}

input updateCodeInput {
  body: String
  tests: [Boolean]
}